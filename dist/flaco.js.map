{"version":3,"file":"flaco.js","sources":["../lib/h.js","../node_modules/smart-table-operators/index.js","../lib/util.js","../lib/domUtil.js","../lib/traverse.js","../lib/tree.js","../lib/update.js","../lib/lifeCycles.js","../lib/withState.js","../lib/elm.js","../lib/connect.js"],"sourcesContent":["const createTextVNode = (value) => ({\n  nodeType: 'Text',\n  children: [],\n  props: {value},\n  lifeCycle: 0\n});\n\n/**\n * Transform hyperscript into virtual dom node\n * @param nodeType {Function, String} - the HTML tag if string, a component or combinator otherwise\n * @param props {Object} - the list of properties/attributes associated to the related node\n * @param children - the virtual dom nodes related to the current node children\n * @returns {Object} - a virtual dom node\n */\nexport default function h (nodeType, props, ...children) {\n  const flatChildren = children.reduce((acc, child) => {\n    const childrenArray = Array.isArray(child) ? child : [child];\n    return acc.concat(childrenArray);\n  }, [])\n    .map(child => {\n      // normalize text node to have same structure than regular dom nodes\n      const type = typeof child;\n      return type === 'object' || type === 'function' ? child : createTextVNode(child);\n    });\n\n  if (typeof nodeType !== 'function') {//regular html/text node\n    return {\n      nodeType,\n      props: props,\n      children: flatChildren,\n      lifeCycle: 0\n    };\n  } else {\n    const fullProps = Object.assign({children: flatChildren}, props);\n    const comp = nodeType(fullProps);\n    return typeof comp !== 'function' ? comp : h(comp, props, ...flatChildren); //functional comp vs combinator (HOC)\n  }\n};","export function swap (f) {\n  return (a, b) => f(b, a);\n}\n\nexport function compose (first, ...fns) {\n  return (...args) => fns.reduce((previous, current) => current(previous), first(...args));\n}\n\nexport function curry (fn, arityLeft) {\n  const arity = arityLeft || fn.length;\n  return (...args) => {\n    const argLength = args.length || 1;\n    if (arity === argLength) {\n      return fn(...args);\n    } else {\n      const func = (...moreArgs) => fn(...args, ...moreArgs);\n      return curry(func, arity - args.length);\n    }\n  };\n}\n\nexport function apply (fn) {\n  return (...args) => fn(...args);\n}\n\nexport function tap (fn) {\n  return arg => {\n    fn(arg);\n    return arg;\n  }\n}","export const nextTick = fn => setTimeout(fn, 0);\n\nexport const pairify = holder => key => [key, holder[key]];\n\nexport const isShallowEqual = (a, b) => {\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  return aKeys.length === bKeys.length && aKeys.every((k) => a[k] === b[k]);\n};\n\nconst ownKeys = obj => Object.keys(obj).filter(k => obj.hasOwnProperty(k));\n\nexport const isDeepEqual = (a, b) => {\n  const type = typeof a;\n\n  //short path(s)\n  if (a === b) {\n    return true;\n  }\n\n  if (type !== typeof b) {\n    return false;\n  }\n\n  if (type !== 'object') {\n    return a === b;\n  }\n\n  // objects ...\n  if (a === null || b === null) {\n    return false;\n  }\n\n  if (Array.isArray(a)) {\n    return a.length && b.length && a.every((item, i) => isDeepEqual(a[i], b[i]));\n  }\n\n  const aKeys = ownKeys(a);\n  const bKeys = ownKeys(b);\n  return aKeys.length === bKeys.length && aKeys.every(k => isDeepEqual(a[k], b[k]));\n};\n\nexport const identity = a => a;\n\nexport const noop = _ => {\n};\n","import {tap} from 'smart-table-operators';\n\nconst updateDomNodeFactory = (method) => (items) => tap(domNode => {\n  for (let pair of items) {\n    domNode[method](...pair);\n  }\n});\n\nexport const removeEventListeners = updateDomNodeFactory('removeEventListener');\nexport const addEventListeners = updateDomNodeFactory('addEventListener');\nexport const setAttributes = (items) => tap((domNode) => {\n  const attributes = items.filter(([key, value]) => typeof value !== 'function');\n  for (let [key, value] of attributes) {\n    value === false ? domNode.removeAttribute(key) : domNode.setAttribute(key, value);\n  }\n});\nexport const removeAttributes = (items) => tap(domNode => {\n  for (let attr of items) {\n    domNode.removeAttribute(attr);\n  }\n});\n\nexport const setTextNode = val => node => node.textContent = val;\n\nexport const createDomNode = vnode => {\n  return vnode.nodeType !== 'Text' ?\n    document.createElement(vnode.nodeType) :\n    document.createTextNode(String(vnode.props.value));\n};\n\nexport const getEventListeners = (props) => {\n  return Object.keys(props)\n    .filter(k => k.substr(0, 2) === 'on')\n    .map(k => [k.substr(2).toLowerCase(), props[k]]);\n};\n","export const traverse = function * (vnode) {\n  yield vnode;\n  if (vnode.children && vnode.children.length) {\n    for (let child of vnode.children) {\n      yield * traverse(child);\n    }\n  }\n};","import {compose, curry} from 'smart-table-operators';\nimport {\n  isShallowEqual,\n  pairify,\n  nextTick,\n  noop\n} from './util';\nimport {\n  removeAttributes,\n  setAttributes,\n  setTextNode,\n  createDomNode,\n  removeEventListeners,\n  addEventListeners,\n  getEventListeners,\n} from './domUtil';\nimport {traverse} from './traverse';\n\nfunction updateEventListeners ({props:newNodeProps}={}, {props:oldNodeProps}={}) {\n  const newNodeEvents = getEventListeners(newNodeProps || {});\n  const oldNodeEvents = getEventListeners(oldNodeProps || {});\n\n  return newNodeEvents.length || oldNodeEvents.length ?\n    compose(\n      removeEventListeners(oldNodeEvents),\n      addEventListeners(newNodeEvents)\n    ) : noop;\n}\n\nfunction updateAttributes (newVNode, oldVNode) {\n  const newVNodeProps = newVNode.props || {};\n  const oldVNodeProps = oldVNode.props || {};\n\n  if (isShallowEqual(newVNodeProps, oldVNodeProps)) {\n    return noop;\n  }\n\n  if (newVNode.nodeType === 'Text') {\n    return setTextNode(newVNode.props.value);\n  }\n\n  const newNodeKeys = Object.keys(newVNodeProps);\n  const oldNodeKeys = Object.keys(oldVNodeProps);\n  const attributesToRemove = oldNodeKeys.filter(k => !newNodeKeys.includes(k));\n\n  return compose(\n    removeAttributes(attributesToRemove),\n    setAttributes(newNodeKeys.map(pairify(newVNodeProps)))\n  );\n}\n\nconst domFactory = createDomNode;\n\n// apply vnode diffing to actual dom node (if new node => it will be mounted into the parent)\nconst domify = function updateDom (oldVnode, newVnode, parentDomNode) {\n  if (!oldVnode) {//there is no previous vnode\n    if (newVnode) {//new node => we insert\n      newVnode.dom = parentDomNode.appendChild(domFactory(newVnode));\n      newVnode.lifeCycle = 1;\n      return {vnode: newVnode, garbage: null};\n    } else {//else (irrelevant)\n      throw new Error('unsupported operation')\n    }\n  } else {//there is a previous vnode\n    if (!newVnode) {//we must remove the related dom node\n      parentDomNode.removeChild(oldVnode.dom);\n      return ({garbage: oldVnode, dom: null});\n    } else if (newVnode.nodeType !== oldVnode.nodeType) {//it must be replaced\n      newVnode.dom = domFactory(newVnode);\n      newVnode.lifeCycle = 1;\n      parentDomNode.replaceChild(newVnode.dom, oldVnode.dom);\n      return {garbage: oldVnode, vnode: newVnode};\n    } else {// only update attributes\n      newVnode.dom = oldVnode.dom;\n      newVnode.lifeCycle = oldVnode.lifeCycle + 1;\n      return {garbage: null, vnode: newVnode};\n    }\n  }\n};\n\n/**\n * render a virtual dom node, diffing it with its previous version, mounting it in a parent dom node\n * @param oldVnode\n * @param newVnode\n * @param parentDomNode\n * @param onNextTick collect operations to be processed on next tick\n * @returns {Array}\n */\nexport const render = function renderer (oldVnode, newVnode, parentDomNode, onNextTick = []) {\n\n  //1. transform the new vnode to a vnode connected to an actual dom element based on vnode versions diffing\n  // i. note at this step occur dom insertions/removals\n  // ii. it may collect sub tree to be dropped (or \"unmounted\")\n  const {vnode, garbage} = domify(oldVnode, newVnode, parentDomNode);\n\n  if (garbage !== null) {\n    // defer unmount lifecycle as it is not \"visual\"\n    for (let g of traverse(garbage)) {\n      if (g.onUnMount) {\n        onNextTick.push(g.onUnMount);\n      }\n    }\n  }\n\n  //Normalisation of old node (in case of a replace we will consider old node as empty node (no children, no props))\n  const tempOldNode = garbage !== null || !oldVnode ? {length: 0, children: [], props: {}} : oldVnode;\n\n  if (vnode) {\n\n    //2. update dom attributes based on vnode prop diffing.\n    //sync\n    if (vnode.onUpdate && vnode.lifeCycle > 1) {\n      vnode.onUpdate();\n    }\n\n    updateAttributes(vnode, tempOldNode)(vnode.dom);\n\n    //fast path\n    if (vnode.nodeType === 'Text') {\n      return onNextTick;\n    }\n\n    if (vnode.onMount && vnode.lifeCycle === 1) {\n      onNextTick.push(() => vnode.onMount());\n    }\n\n    const childrenCount = Math.max(tempOldNode.children.length, vnode.children.length);\n\n    //async will be deferred as it is not \"visual\"\n    const setListeners = updateEventListeners(vnode, tempOldNode);\n    if (setListeners !== noop) {\n      onNextTick.push(() => setListeners(vnode.dom));\n    }\n\n    //3 recursively traverse children to update dom and collect functions to process on next tick\n    if (childrenCount > 0) {\n      for (let i = 0; i < childrenCount; i++) {\n        // we pass onNextTick as reference (improve perf: memory + speed)\n        render(tempOldNode.children[i], vnode.children[i], vnode.dom, onNextTick);\n      }\n    }\n  }\n\n  return onNextTick;\n};\n\nexport function hydrate (vnode, dom) {\n  'use strict';\n  const hydrated = Object.assign({}, vnode);\n  const domChildren = Array.from(dom.childNodes).filter(n => n.nodeType !== 3 || n.nodeValue.trim() !== '');\n  hydrated.dom = dom;\n  hydrated.children = vnode.children.map((child, i) => hydrate(child, domChildren[i]));\n  return hydrated;\n}\n\nexport const mount = curry(function (comp, initProp, root) {\n  const vnode = comp.nodeType !== void 0 ? comp : comp(initProp || {});\n  const oldVNode = root.children.length ? hydrate(vnode, root.children[0]) : null;\n  const batch = render(oldVNode, vnode, root);\n  nextTick(function () {\n    for (let op of batch) {\n      op();\n    }\n  });\n  return vnode;\n});","import {render} from './tree';\nimport {nextTick} from './util';\n\n/**\n * Create a function which will trigger an update of the component with the passed state\n * @param comp {Function} - the component to update\n * @param initialVNode - the initial virtual dom node related to the component (ie once it has been mounted)\n * @returns {Function} - the update function\n */\nexport default function update (comp, initialVNode) {\n  let oldNode = initialVNode;\n  const updateFunc = (props, ...args) => {\n    const mount = oldNode.dom.parentNode;\n    const newNode = comp(Object.assign({children: oldNode.children || []}, oldNode.props, props), ...args);\n    const nextBatch = render(oldNode, newNode, mount);\n\n    // danger zone !!!!\n    // change by keeping the same reference so the eventual parent node does not need to be \"aware\" tree may have changed downstream: oldNode may be the child of someone ...(well that is a tree data structure after all :P )\n    oldNode = Object.assign(oldNode || {}, newNode);\n    // end danger zone\n\n    nextTick(function () {\n      for (let op of nextBatch) {\n        op();\n      }\n    });\n    return newNode;\n  };\n  return updateFunc;\n}","import {curry} from 'smart-table-operators';\n\nconst lifeCycleFactory = method => curry((fn, comp) => (props, ...args) => {\n  const n = comp(props, ...args);\n  n[method] = () => fn(n, ...args);\n  return n;\n});\n\n/**\n * life cycle: when the component is mounted\n */\nexport const onMount = lifeCycleFactory('onMount');\n\n/**\n * life cycle: when the component is unmounted\n */\nexport const onUnMount = lifeCycleFactory('onUnMount');\n\n/**\n * life cycle: before the component is updated\n */\nexport const onUpdate = lifeCycleFactory('onUpdate');","import update from './update';\nimport {onMount, onUpdate} from './lifeCycles';\nimport {compose} from 'smart-table-operators';\n\n/**\n * Combinator to create a \"stateful component\": ie it will have its own state and the ability to update its own tree\n * @param comp {Function} - the component\n * @returns {Function} - a new wrapped component\n */\nexport default function (comp) {\n  return function () {\n    let updateFunc;\n    const wrapperComp = (props, ...args) => {\n      //lazy evaluate updateFunc (to make sure it is defined\n      const setState = (newState) => updateFunc(newState);\n      return comp(props, setState, ...args);\n    };\n    const setUpdateFunction = (vnode) => {\n      updateFunc = update(wrapperComp, vnode);\n    };\n\n    return compose(onMount(setUpdateFunction), onUpdate(setUpdateFunction))(wrapperComp);\n  };\n};","import update from './update';\nimport {onMount} from './lifeCycles';\nimport {compose} from 'smart-table-operators';\n\n/**\n * Combinator to create a Elm like app\n * @param view {Function} - a component which takes as arguments the current model and the list of updates\n * @returns {Function} - a Elm like application whose properties \"model\", \"updates\" and \"subscriptions\" will define the related domain specific objects\n */\nexport default function (view) {\n  return function ({model, updates, subscriptions = []}={}) {\n    let updateFunc;\n    let actionStore = {};\n    for (let update of Object.keys(updates)) {\n      actionStore[update] = (...args) => {\n        model = updates[update](model, ...args); //todo consider side effects, middlewares, etc\n        return updateFunc(model, actionStore);\n      }\n    }\n\n    const comp = () => view(model, actionStore);\n\n    const initActionStore = (vnode) => {\n      updateFunc = update(comp, vnode);\n    };\n    const initSubscription = subscriptions.map(sub => vnode => sub(vnode, actionStore));\n    const initFunc = compose(initActionStore, ...initSubscription);\n\n    return onMount(initFunc, comp);\n  };\n};","import update from './update';\nimport {compose, curry} from 'smart-table-operators';\nimport {onMount, onUnMount} from './lifeCycles'\nimport {isDeepEqual, identity} from './util';\n\n/**\n * Connect combinator: will create \"container\" component which will subscribe to a Redux like store. and update its children whenever a specific slice of state change under specific circumstances\n * @param store {Object} - The store (implementing the same api than Redux store\n * @param actions {Object} [{}] - The list of actions the connected component will be able to trigger\n * @param sliceState {Function} [state => state] - A function which takes as argument the state and return a \"transformed\" state (like partial, etc) relevant to the container\n * @returns {Function} - A container factory with the following arguments:\n *  - comp: the component to wrap note the actions object will be passed as second argument of the component for convenience\n *  - mapStateToProp: a function which takes as argument what the \"sliceState\" function returns and returns an object to be blended into the properties of the component (default to identity function)\n *  - shouldUpdate: a function which takes as arguments the previous and the current versions of what \"sliceState\" function returns to returns a boolean defining whether the component should be updated (default to a deepEqual check)\n */\nexport default function (store, actions = {}, sliceState = identity) {\n  return function (comp, mapStateToProp = identity, shouldUpate = (a, b) => isDeepEqual(a, b) === false) {\n    return function (initProp) {\n      let componentProps = initProp;\n      let updateFunc, previousStateSlice, unsubscriber;\n\n      const wrapperComp = (props, ...args) => {\n        return comp(props, actions, ...args);\n      };\n\n      const subscribe = onMount((vnode) => {\n        updateFunc = update(wrapperComp, vnode);\n        unsubscriber = store.subscribe(() => {\n          const stateSlice = sliceState(store.getState());\n          if (shouldUpate(previousStateSlice, stateSlice) === true) {\n            Object.assign(componentProps, mapStateToProp(stateSlice));\n            updateFunc(componentProps);\n            previousStateSlice = stateSlice;\n          }\n        });\n      });\n\n      const unsubscribe = onUnMount(() => {\n        unsubscriber();\n      });\n\n      return compose(subscribe, unsubscribe)(wrapperComp);\n    };\n  };\n};"],"names":["mount","update"],"mappings":"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"}